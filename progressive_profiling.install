<?php

/**
 * Created by PhpStorm.
 * User: vasi
 * Date: 07/03/16
 * Time: 16:09
 */

/**
 * Implements hook_schema().
 */
function progressive_profiling_schema() {
  $schema['progressive_profiling_fields'] = array(
    'description' => 'Stores the fields configuration.',
    'fields' => array(
      'field_name' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The machine name of the account field.',
      ),
      'configuration' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'The configuration of the field.',
      ),
      'weight' => array(
        'description' => 'The weight of the field in the list.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the field is enable for the profiling or not.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('field_name'),
    'foreign keys' => array(
      'field_name' => array(
        'table' => 'field_config',
        'columns' => array('field_name' => 'field_name'),
      ),
    ),
  );

  $schema['progressive_profiling_areas'] = array(
    'description' => 'Defines the areas where the profile questions will be asked.',
    'fields' => array(
      'area_id' => array(
        'description' => 'The primary identifier for an area.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'area_title' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The area title.',
      ),
      'configuration' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'The configuration of the area consisting of conditions and other different settings.',
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the area is enabled for the profiling or not.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('area_id'),
  );
  $schema['progressive_profiling_resources_access'] = array(
    'description' => 'Stores the resources ids to which the user has access without being asked to fill in fields anymore.',
    'fields' => array(
      'uid' => array(
        'description' => 'The user id.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'resource_id' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The unique identifier of the resource.',
      ),
      'area_id' => array(
        'description' => 'The area where the user was asked to fill in the fields.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'uid_resource_id' => array('uid', 'resource_id'),
      'uid_area_id' => array('uid', 'area_id'),
    ),
    'foreign keys' => array(
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'area_id' => array(
        'table' => 'progressive_profiling_areas',
        'columns' => array('area_id' => 'area_id'),
      ),
    ),
  );
  $schema['progressive_profiling_last_answer_time'] = array(
    'description' => 'Stores the last time when the users last answered to a profiling questions set.',
    'fields' => array(
      'uid' => array(
        'description' => 'The user id.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'area_id' => array(
        'description' => 'The area where the user was asked to fill in the fields.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'resource_id' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The unique identifier of the resource.',
      ),
      'timestamp' => array(
        'description' => 'The UNIX timestamp.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'uid_area_resource' => array('uid', 'area_id', 'resource_id'),
    ),
    'foreign keys' => array(
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'area_id' => array(
        'table' => 'progressive_profiling_areas',
        'columns' => array('area_id' => 'area_id'),
      ),
    ),
  );

  $schema['progressive_profiling_completed_fields'] = array(
    'description' => 'Stores the fields configuration.',
    'fields' => array(
      'uid' => array(
        'description' => 'The user id.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'field_name' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The machine name of the account field.',
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_update_N(). Creates possible missing tables.
 */
function progressive_profiling_update_7001() {
  $tables_to_check = array(
    'progressive_profiling_areas',
    'progressive_profiling_resources_access',
    'progressive_profiling_last_answer_time'
  );
  $schema = progressive_profiling_schema();
  foreach ($tables_to_check as $table_name) {
    if (!db_table_exists($table_name)) {
      db_create_table($table_name, $schema[$table_name]);
    }
  }
}

/**
 * Implements hook_update_N(). Creats the progressive_profiling_completed_fields table.
 */
function progressive_profiling_update_7002() {
  $tables_to_check = array(
    'progressive_profiling_completed_fields',
  );
  $schema = progressive_profiling_schema();
  foreach ($tables_to_check as $table_name) {
    if (!db_table_exists($table_name)) {
      db_create_table($table_name, $schema[$table_name]);
    }
  }
}

/**
 * Adds the area_id field to the progressive_profiling_resources_access table.
 */
function progressive_profiling_update_7003() {
  if (!db_field_exists('progressive_profiling_resources_access', 'area_id')) {
    $schema = progressive_profiling_schema();
    $indexes = $schema['progressive_profiling_resources_access'];
    unset($indexes['fields'], $indexes['indexes']['uid_resource_id'], $indexes['foreign keys']['uid']);
    db_add_field('progressive_profiling_resources_access', 'area_id', $schema['progressive_profiling_resources_access']['fields']['area_id'], $indexes);
  }
}
